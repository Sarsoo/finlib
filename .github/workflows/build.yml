name: Build Binaries

on:
  # Runs on pushes targeting the default branch
  push:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Cargo Build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Cargo Test
        uses: actions-rs/cargo@v1
        with:
          command: test

  buildPy:
    name: Build Python
    runs-on: ubuntu-latest
    needs: [ build ] # for ignoring bad builds
    steps:
      - uses: actions/checkout@v4 # get source

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Python 3
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python-version }}

      - name: Install Maturin
        run: sudo apt update && sudo apt install -y python3-maturin

      - name: Build Python
        working-directory: ./pyfinlib
        run: maturin develop

  buildWASM:
    name: Build WASM
    runs-on: ubuntu-latest
    needs: [ build ] # for ignoring bad builds
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build Rust for WASM
        working-directory: ./finlib-wasm
        run: wasm-pack build

  doc:
    name: Build Documentation
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [ build, buildPy, buildWASM ] # for ignoring bad builds
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build Docs
        run: cargo doc --no-deps --document-private-items

      - name: Add redirect
        run: echo '<meta http-equiv="refresh" content="0;url=finlib/index.html">' > target/doc/index.html

      - name: Remove lock file
        run: rm target/doc/.lock

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './target/doc'

  deploy:
    name: Deploy Documentation
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: doc
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4